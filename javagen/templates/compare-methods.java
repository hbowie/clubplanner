<?nextrec?>
<?definegroup 1 =$itemclass$=?>
<?ifendgroup 1 ?>

    return comparison;
  }
<?endif?>
<?ifnewgroup 1 ?>
<?output "../includes/=$itemclass$=-compare-methods.java"?>

  /* 
   Following code generated by PSTextMerge using: 
   
     template:  =$templatefilename$=
     data file: =$datafilename$=
   */
   
  /**
   Determine if this item has a key that is equal to the passed
   item.

   @param  The second object to be compared to this one.
   @return True if the keys are equal.
   */
  public boolean equals (Object obj2) {
    return (this.compareTo (obj2) == 0);
  }
  
  /**
   Compare this =$itemclass$= object to another, using the key field(s) for comparison.
   
   @param The second object to compare to this one.
   
   @return A number less than zero if this object is less than the second,
           a number greater than zero if this object is greater than the second,
           or zero if the two item's keys are equal.
   */
  public int compareTo (Object obj2) {
    int comparison = 0;
    
    if (obj2 == null) {
      comparison = 1;
    }
    
    if (comparison == 0) {
      if (! obj2.getClass().getSimpleName().equals ("=$itemclass$=")) {
        comparison = 1;
      }
    }
    
    =$itemclass$= =$itemclass&clul$=2 = (=$itemclass$=)obj2;
<?endif?>
<?if =$key$= ?>
    if (comparison == 0) {
      if (this.get=$field&cuul$=() == null) {
        comparison = -1;
      }
      else
      if (=$itemclass&clul$=2.get=$field&cuul$=() == null) {
        comparison = 1;
      } else {
<?if =$case$= != "Ignore" ?>
        comparison = (this.get=$field&cuul$=().compareTo(=$itemclass&clul$=2.get=$field&cuul$=()));
<?endif?>
<?if =$case$= == "Ignore" ?>
        comparison = (this.get=$field&cuul$=().compareToIgnoreCase(=$itemclass&clul$=2.get=$field&cuul$=()));
<?endif?>
      }
    }
<?endif?>
<?loop?>