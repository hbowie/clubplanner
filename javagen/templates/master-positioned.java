<?nextrec?>
<?definegroup 1 =$itemclass$=?>
<?ifendgroup 1 ?>
<?ifnewgroup 1 ?>
<?if =$itemtype$= = "Master" ?>
<?set masterItemClass = =$itemclass$= ?>
<?output "../../src/com/powersurgepub/clubplanner/model/=$itemclass$=Positioned.java"?>
package com.powersurgepub.clubplanner.model;

  import com.powersurgepub.psdatalib.pstags.TagsNode;

  /* 
   This item mater positioned class generated by PSTextMerge using: 
   
     template:  =$templatefilename$=
     data file: =$datafilename$=
   */
 
/**

 Consists of an =$itemclass$= item and information to position it within the
 =$itemclass$=List.

 */
public class =$itemclass$=Positioned {

  public static final int NAVIGATE_USING_LIST = 1;
  public static final int NAVIGATE_USING_TREE = 2;

  private   =$itemclass$=  =$itemclass&clul$=;
  private   int      index;
  private   TagsNode tagsNode;
  private   int      navigator = NAVIGATE_USING_LIST;
  private   boolean  newItem = true;

  public =$itemclass$=Positioned () {
    this.=$itemclass&clul$= = new =$itemclass$=();
    this.index = -1;
    this.tagsNode = null;
  }

  public =$itemclass$=Positioned (=$itemclass$= =$itemclass&clul$=, int index) {
    this.=$itemclass&clul$= = =$itemclass&clul$=;
    this.index = index;
    this.tagsNode = =$itemclass&clul$=.getTagsNode();
    newItem = false;
  }

  public void set=$itemclass$= (=$itemclass$= =$itemclass&clul$=) {
    this.=$itemclass&clul$= = =$itemclass&clul$=;
    if (=$itemclass&clul$= != null && =$itemclass&clul$=.hasKey()) {
      newItem = false;
    }
  }

  public =$itemclass$= get=$itemclass$= () {
    return =$itemclass&clul$=;
  }

  public void setIndex (int index) {
    this.index = index;
  }

  public void incrementIndex (int increment) {
    this.index = index + increment;
  }

  public boolean hasValidIndex (=$itemclass$=List =$itemclass&clul$=s) {
    return (index >= 0 && index < =$itemclass&clul$=s.size());
  }

  public int getIndex () {
    return index;
  }

  public int getIndexForDisplay () {
    return (index + 1);
  }

  public void setTagsNode (TagsNode tagsNode) {
    this.tagsNode = tagsNode;
  }

  public TagsNode getTagsNode () {
    return tagsNode;
  }

  public void setNavigator (int navigator) {
    if (navigator == NAVIGATE_USING_TREE) {
      this.navigator = NAVIGATE_USING_TREE;
    } else {
      this.navigator = NAVIGATE_USING_LIST;
    }
  }

  public void setNavigatorToList (boolean useList) {
    this.navigator =
        useList ? NAVIGATE_USING_LIST : NAVIGATE_USING_TREE;
  }

  public int getNavigator () {
    return navigator;
  }

  public boolean navigateUsingList () {
    return (navigator == NAVIGATE_USING_LIST);
  }

  public boolean navigateUsingTree () {
    return (navigator == NAVIGATE_USING_TREE);
  }

  public void setNew=$itemclass$= (boolean newItem) {
    this.newItem = newItem;
  }

  public boolean isNew=$itemclass$= () {
    return newItem;
  }

}
