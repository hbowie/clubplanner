/*
 * Copyright 2012 - 2013 Herb Bowie
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.powersurgepub.clubplanner.view;

  import com.powersurgepub.clubplanner.*;
  import com.powersurgepub.clubplanner.model.*;
  import com.powersurgepub.linktweaker.*;
  import com.powersurgepub.psdatalib.clubplanner.*;
  import com.powersurgepub.psdatalib.psdata.*;
  import com.powersurgepub.psdatalib.psdata.values.*;
  import com.powersurgepub.psdatalib.psdata.widgets.*;
  import com.powersurgepub.psdatalib.ui.*;
  import java.awt.*;
  import java.util.*;
  import javax.swing.*;
 
/**
 A panel displaying some of an item's fields, and allowing the user to modify those fields. <p>
 
 Generated by PSTextMerge using item-panel.java.

 @author Herb Bowie
 */
public class ClubEventPanel4
		extends
			JPanel
		implements
			DateOwner {
	

  /*
   Following code generated by PSTextMerge using:
 
     template:  item-panel-definitions.java
     data file: /Users/hbowie/Java/projects/nbproj/clubplanner/javagen/fields.xls
   */
 
  private JLabel    idLabel    = new JLabel("ID:", JLabel.LEFT);
  private JTextField idJTextField = new JTextField();
  private LinkLabel linkLabel    = new LinkLabel("Link:");
  private JScrollPane linkScrollPane = new javax.swing.JScrollPane();
  private JTextArea linkJTextArea = new JTextArea();
  private LinkLabel venueLabel    = new LinkLabel("Venue:");
  private JScrollPane venueScrollPane = new javax.swing.JScrollPane();
  private JTextArea venueJTextArea = new JTextArea();
  private LinkLabel imageLabel    = new LinkLabel("Image:");
  private JScrollPane imageScrollPane = new javax.swing.JScrollPane();
  private JTextArea imageJTextArea = new JTextArea();
  private LinkLabel newsImageLabel    = new LinkLabel("News Image:");
  private JScrollPane newsImageScrollPane = new javax.swing.JScrollPane();
  private JTextArea newsImageJTextArea = new JTextArea();
  private JLabel    callToActionLabel    = new JLabel("Call to Action:", JLabel.LEFT);
  private JTextField callToActionJTextField = new JTextField();
  private LinkLabel ctaLinkLabel    = new LinkLabel("CTA Link:");
  private JScrollPane ctaLinkScrollPane = new javax.swing.JScrollPane();
  private JTextArea ctaLinkJTextArea = new JTextArea();
  private JLabel    layoutLabel    = new JLabel("Layout:", JLabel.LEFT);
  private PSComboBox layoutPSComboBox = new PSComboBox();

  private     JLabel              bottomFiller   = new JLabel("");

  private     boolean             modified = false;

	private     GridBagger          gb = new GridBagger();
	
	private     JFrame              frame;
	
	private     LinkTweaker         linkTweaker = null;

  /**
   The constructor.
   */
  public ClubEventPanel4(JFrame frame, LinkTweaker linkTweaker) {
 
    this.frame = frame;
    this.linkTweaker = linkTweaker;
    gb.startLayout (this, 4, 99);
    gb.setByRows(true);
		gb.setDefaultColumnWeight (0.5);
		gb.setDefaultRowWeight (0.0);
		gb.setAllInsets (4);
    gb.setFill(GridBagConstraints.HORIZONTAL);
    gb.setAnchor(GridBagConstraints.NORTHWEST);


  /*
   Following code generated by PSTextMerge using:
 
     template:  item-panel-layout.java
     data file: /Users/hbowie/Java/projects/nbproj/clubplanner/javagen/fields.xls
   */
 

		// Panel Layout for ID
    idLabel.setLabelFor(idJTextField);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(8);
    gb.add(idLabel);
    idJTextField.setToolTipText("After the event has been added to the club web site, the ID assigned to the page by the Content Management System should be entered here.");
    gb.setWidth(3);
    gb.setTopInset(4);
    gb.add(idJTextField);

		// Panel Layout for Link
		linkLabel.setLinkTweaker(linkTweaker);
    linkLabel.setLinkTextArea(linkJTextArea);
    linkLabel.setFrame(frame);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(linkLabel);
    linkJTextArea.setColumns(20);
    linkJTextArea.setLineWrap(true);
    linkJTextArea.setRows(3);
    linkJTextArea.setWrapStyleWord(false);
    linkJTextArea.setToolTipText("A URL pointing to a Web page with more information about the event.");
    linkScrollPane.setViewportView(linkJTextArea);
    gb.setWidth(3);
    gb.setHeight(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(linkScrollPane);
    gb.setFill(GridBagConstraints.HORIZONTAL);

		// Panel Layout for Venue
		venueLabel.setLinkTweaker(linkTweaker);
    venueLabel.setLinkTextArea(venueJTextArea);
    venueLabel.setFrame(frame);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(venueLabel);
    venueJTextArea.setColumns(20);
    venueJTextArea.setLineWrap(true);
    venueJTextArea.setRows(3);
    venueJTextArea.setWrapStyleWord(false);
    venueJTextArea.setToolTipText("A URL pointing to a Web page with more information about the venue for the event.");
    venueScrollPane.setViewportView(venueJTextArea);
    gb.setWidth(3);
    gb.setHeight(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(venueScrollPane);
    gb.setFill(GridBagConstraints.HORIZONTAL);

		// Panel Layout for Image
		imageLabel.setLinkTweaker(linkTweaker);
    imageLabel.setLinkTextArea(imageJTextArea);
    imageLabel.setFrame(frame);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(imageLabel);
    imageJTextArea.setColumns(20);
    imageJTextArea.setLineWrap(true);
    imageJTextArea.setRows(3);
    imageJTextArea.setWrapStyleWord(false);
    imageJTextArea.setToolTipText("A URL pointing to an image that can be used to help advertise the event.");
    imageScrollPane.setViewportView(imageJTextArea);
    gb.setWidth(3);
    gb.setHeight(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(imageScrollPane);
    gb.setFill(GridBagConstraints.HORIZONTAL);

		// Panel Layout for News Image
		newsImageLabel.setLinkTweaker(linkTweaker);
    newsImageLabel.setLinkTextArea(newsImageJTextArea);
    newsImageLabel.setFrame(frame);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(newsImageLabel);
    newsImageJTextArea.setColumns(20);
    newsImageJTextArea.setLineWrap(true);
    newsImageJTextArea.setRows(3);
    newsImageJTextArea.setWrapStyleWord(false);
    newsImageJTextArea.setToolTipText("A URL pointing to an image suitable for use in our newsletter.");
    newsImageScrollPane.setViewportView(newsImageJTextArea);
    gb.setWidth(3);
    gb.setHeight(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(newsImageScrollPane);
    gb.setFill(GridBagConstraints.HORIZONTAL);

		// Panel Layout for Call to Action
    callToActionLabel.setLabelFor(callToActionJTextField);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(8);
    gb.add(callToActionLabel);
    callToActionJTextField.setToolTipText("Brief request to the reader to take some sort of action");
    gb.setWidth(3);
    gb.setTopInset(4);
    gb.add(callToActionJTextField);

		// Panel Layout for CTA Link
		ctaLinkLabel.setLinkTweaker(linkTweaker);
    ctaLinkLabel.setLinkTextArea(ctaLinkJTextArea);
    ctaLinkLabel.setFrame(frame);
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(ctaLinkLabel);
    ctaLinkJTextArea.setColumns(20);
    ctaLinkJTextArea.setLineWrap(true);
    ctaLinkJTextArea.setRows(3);
    ctaLinkJTextArea.setWrapStyleWord(false);
    ctaLinkJTextArea.setToolTipText("The actionable link");
    ctaLinkScrollPane.setViewportView(ctaLinkJTextArea);
    gb.setWidth(3);
    gb.setHeight(1);
    gb.setTopInset(4);
    gb.setRowWeight(0.1);
    gb.setFill(GridBagConstraints.BOTH);
    gb.add(ctaLinkScrollPane);
    gb.setFill(GridBagConstraints.HORIZONTAL);

		// Panel Layout for Layout
    layoutLabel.setLabelFor(layoutPSComboBox);
    layoutPSComboBox.load (ClubEvent.class, "layout.txt");
    gb.setColumnWeight(0.0);
    gb.setWidth(1);
    gb.setTopInset(8);
    gb.add(layoutLabel);
    layoutPSComboBox.setToolTipText("The type of layout to use for this item in our newsletter");
    gb.setWidth(3);
    gb.setTopInset(4);
    gb.add(layoutPSComboBox);

    gb.setWidth(4);
    gb.setFill(GridBagConstraints.BOTH);
    gb.setColumnWeight(1.0);
    gb.setRowWeight(1.0);
    gb.add(bottomFiller);
 
  }
 

  /*
   Following code generated by PSTextMerge using:
 
     template:  item-panel-display.java
     data file: /Users/hbowie/Java/projects/nbproj/clubplanner/javagen/fields.xls
   */
  public void display (ClubEvent clubEvent) {
 
    modified = false;
 
    if (clubEvent.hasId()) {
      idJTextField.setText (clubEvent.getId().toString());
    } else {
      idJTextField.setText ("");
    }
    if (clubEvent.hasLink()) {
      linkJTextArea.setText (clubEvent.getLink().toString());
    } else {
      linkJTextArea.setText ("");
    }
    if (clubEvent.hasVenue()) {
      venueJTextArea.setText (clubEvent.getVenue().toString());
    } else {
      venueJTextArea.setText ("");
    }
    if (clubEvent.hasImage()) {
      imageJTextArea.setText (clubEvent.getImage().toString());
    } else {
      imageJTextArea.setText ("");
    }
    if (clubEvent.hasNewsImage()) {
      newsImageJTextArea.setText (clubEvent.getNewsImage().toString());
    } else {
      newsImageJTextArea.setText ("");
    }
    if (clubEvent.hasCallToAction()) {
      callToActionJTextField.setText (clubEvent.getCallToAction().toString());
    } else {
      callToActionJTextField.setText ("");
    }
    if (clubEvent.hasCtaLink()) {
      ctaLinkJTextArea.setText (clubEvent.getCtaLink().toString());
    } else {
      ctaLinkJTextArea.setText ("");
    }
    if (clubEvent.hasLayout()) {
      layoutPSComboBox.setText (clubEvent.getLayout().toString());
    } else {
      layoutPSComboBox.setText ("");
    }
 
  }


  /*
   Following code generated by PSTextMerge using:
 
     template:  item-panel-mod.java
     data file: /Users/hbowie/Java/projects/nbproj/clubplanner/javagen/fields.xls
   */
 
  public boolean modIfChanged (ClubEvent clubEvent) {
 

    if (! clubEvent.getIdAsString().equals (idJTextField.getText())) {
      clubEvent.setId(idJTextField.getText());
      modified = true;
    }

    if (! clubEvent.getLinkAsString().equals (linkJTextArea.getText())) {
      clubEvent.setLink(linkJTextArea.getText());
      modified = true;
    }

    if (! clubEvent.getVenueAsString().equals (venueJTextArea.getText())) {
      clubEvent.setVenue(venueJTextArea.getText());
      modified = true;
    }

    if (! clubEvent.getImageAsString().equals (imageJTextArea.getText())) {
      clubEvent.setImage(imageJTextArea.getText());
      modified = true;
    }

    if (! clubEvent.getNewsImageAsString().equals (newsImageJTextArea.getText())) {
      clubEvent.setNewsImage(newsImageJTextArea.getText());
      modified = true;
    }

    if (! clubEvent.getCallToActionAsString().equals (callToActionJTextField.getText())) {
      clubEvent.setCallToAction(callToActionJTextField.getText());
      modified = true;
    }

    if (! clubEvent.getCtaLinkAsString().equals (ctaLinkJTextArea.getText())) {
      clubEvent.setCtaLink(ctaLinkJTextArea.getText());
      modified = true;
    }

    if (! clubEvent.getLayoutAsString().equals (layoutPSComboBox.getText())) {
      clubEvent.setLayout(layoutPSComboBox.getText());
      modified = true;
    }

    return modified;
 
  }


  /*
   Following code generated by PSTextMerge using:
 
     template:  item-panel-get.java
     data file: /Users/hbowie/Java/projects/nbproj/clubplanner/javagen/fields.xls
   */
 

  /**
    Returns the id for this club event.
 
    @return The id for this club event.
   */
  public JTextField getIdJTextField () {
    return idJTextField;
  }

  /**
    Returns the link for this club event.
 
    @return The link for this club event.
   */
  public JTextArea getLinkJTextArea () {
    return linkJTextArea;
  }

  /**
    Returns the venue for this club event.
 
    @return The venue for this club event.
   */
  public JTextArea getVenueJTextArea () {
    return venueJTextArea;
  }

  /**
    Returns the image for this club event.
 
    @return The image for this club event.
   */
  public JTextArea getImageJTextArea () {
    return imageJTextArea;
  }

  /**
    Returns the news image for this club event.
 
    @return The news image for this club event.
   */
  public JTextArea getNewsImageJTextArea () {
    return newsImageJTextArea;
  }

  /**
    Returns the call to action for this club event.
 
    @return The call to action for this club event.
   */
  public JTextField getCallToActionJTextField () {
    return callToActionJTextField;
  }

  /**
    Returns the cta link for this club event.
 
    @return The cta link for this club event.
   */
  public JTextArea getCtaLinkJTextArea () {
    return ctaLinkJTextArea;
  }

  /**
    Returns the layout for this club event.
 
    @return The layout for this club event.
   */
  public PSComboBox getLayoutPSComboBox () {
    return layoutPSComboBox;
  }


  /**
   Set a link field to a new value after it has been tweaked.
 
   This method generated by PSTextMerge using:
 
     template:  item-panel-tweak.java
     data file: /Users/hbowie/Java/projects/nbproj/clubplanner/javagen/fields.xls
 
   @param tweakedLink The link after it has been tweaked.
   @param linkID      A string identifying the link, in case there are more
                      than one. This would be the text used in the label
                      for the link.
  */
  public void setTweakedLink (String tweakedLink, String linkID) {
    if (linkID.equals(linkLabel.getLabelText())) {
      linkJTextArea.setText (tweakedLink);
    }
    if (linkID.equals(venueLabel.getLabelText())) {
      venueJTextArea.setText (tweakedLink);
    }
    if (linkID.equals(imageLabel.getLabelText())) {
      imageJTextArea.setText (tweakedLink);
    }
    if (linkID.equals(newsImageLabel.getLabelText())) {
      newsImageJTextArea.setText (tweakedLink);
    }
    if (linkID.equals(ctaLinkLabel.getLabelText())) {
      ctaLinkJTextArea.setText (tweakedLink);
    }
  }

  /**
   To be called whenever the date is modified by DatePanel.
   */
  public void dateModified (Date date) {
 
  }
 
  /**
   Does this date have an associated rule for recurrence?
   */
  public boolean canRecur() {
    return false;
	}
 
  /**
   Provide a text string describing the recurrence rule, that can
   be used as a tool tip.
   */
  public String getRecurrenceRule() {
    return "";
  }
 
  /**
   Apply the recurrence rule to the date.
 
   @param date Date that will be incremented.
   */
  public void recur (GregorianCalendar date) {
 
  }

}
