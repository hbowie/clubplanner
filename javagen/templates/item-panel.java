<?nextrec?>
<?definegroup 1 =$itemclass$= ?>
<?definegroup 2 =$panelno$= ?>
<?ifendgroup 2 ?>
<?ifendgroup 1 ?>
<?ifnewgroup 1 ?>
<?ifnewgroup 2 ?>
<?if =$panelno$= ?>
<?output "../../src/com/powersurgepub/clubplanner/view/=$itemclass$=Panel=$panelno$=.java"?>
/*
 * Copyright 2012 - 2013 Herb Bowie
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.powersurgepub.clubplanner.view;

  import com.powersurgepub.clubplanner.*;
  import com.powersurgepub.clubplanner.model.*;
  import com.powersurgepub.linktweaker.*;
  import com.powersurgepub.psdatalib.clubplanner.*;
  import com.powersurgepub.psdatalib.psdata.*;
  import com.powersurgepub.psdatalib.psdata.values.*;
  import com.powersurgepub.psdatalib.psdata.widgets.*;
  import com.powersurgepub.psdatalib.ui.*;
  import java.awt.*;
  import java.util.*;
  import javax.swing.*;
  
/**
 A panel displaying some of an item's fields, and allowing the user to modify those fields. <p>
 
 Generated by PSTextMerge using =$templatefilename$=.

 @author Herb Bowie
 */
public class =$itemclass$=Panel=$panelno$= 
		extends 
			JPanel 
		implements
			DateOwner {
			
<?include "../includes/=$itemclass$=Panel=$panelno$=-panel-definitions.java"?>

  private     JLabel              bottomFiller   = new JLabel("");

  private     boolean             modified = false;

	private     GridBagger          gb = new GridBagger();
	
	private     JFrame              frame;
	
	private     LinkTweaker         linkTweaker = null;

  /**
   The constructor.
   */
  public =$itemclass$=Panel=$panelno$=(JFrame frame, LinkTweaker linkTweaker) {
  
    this.frame = frame;
    this.linkTweaker = linkTweaker;
    gb.startLayout (this, 4, 99);
    gb.setByRows(true);
		gb.setDefaultColumnWeight (0.5);
		gb.setDefaultRowWeight (0.0);
		gb.setAllInsets (4);
    gb.setFill(GridBagConstraints.HORIZONTAL);
    gb.setAnchor(GridBagConstraints.NORTHWEST);

<?include "../includes/=$itemclass$=Panel=$panelno$=-panel-layout.java"?>

    gb.setWidth(4);
    gb.setFill(GridBagConstraints.BOTH);
    gb.setColumnWeight(1.0);
    gb.setRowWeight(1.0);    
    gb.add(bottomFiller);
    
  }  
  
<?include "../includes/=$itemclass$=Panel=$panelno$=-panel-display.java"?>

<?include "../includes/=$itemclass$=Panel=$panelno$=-panel-mod.java"?>

<?include "../includes/=$itemclass$=Panel=$panelno$=-panel-get.java"?>

<?include "../includes/=$itemclass$=Panel=$panelno$=-panel-tweak.java"?>

  /**
   To be called whenever the date is modified by DatePanel.
   */
  public void dateModified (Date date) {
  
  }
  
  /**
   Does this date have an associated rule for recurrence?
   */
  public boolean canRecur() {
    return false;
	}
  
  /**
   Provide a text string describing the recurrence rule, that can
   be used as a tool tip.
   */
  public String getRecurrenceRule() {
    return "";
  }
  
  /**
   Apply the recurrence rule to the date.
   
   @param date Date that will be incremented. 
   */
  public void recur (GregorianCalendar date) {
  
  }

}
<?endif?>
<?endif?>
<?loop?>
